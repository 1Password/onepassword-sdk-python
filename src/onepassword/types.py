"""
Generated by typeshare 1.9.2
"""

from __future__ import annotations

from pydantic import BaseModel
from typing import List, Literal, Optional


class Item(BaseModel):
    """
    Represents a 1Password item.
    """

    id: str
    """
    The item's ID
    """
    title: str
    """
    The item's title
    """
    category: ItemCategory
    """
    The item's category
    """
    vault_id: str
    """
    The ID of the vault where the item is saved
    """
    fields: List[ItemField]
    """
    The item's fields
    """
    sections: List[ItemSection]
    """
    The item's sections
    """


ItemCategory = Literal[
    "Login",
    "SecureNote",
    "CreditCard",
    "CryptoWallet",
    "Identity",
    "Password",
    "Document",
    "ApiCredentials",
    "BankAccount",
    "Database",
    "DriverLicense",
    "Email",
    "MedicalRecord",
    "Membership",
    "OutdoorLicense",
    "Passport",
    "Rewards",
    "Router",
    "Server",
    "SshKey",
    "SocialSecurityNumber",
    "SoftwareLicense",
    "Person",
    "Unsupported",
]


class ItemField(BaseModel):
    """
    Represents a field within an item.
    """

    id: str
    """
    The field's ID
    """
    title: str
    """
    The field's title
    """
    section_id: Optional[str]
    """
    The ID of the section containing the field. Built-in fields such as usernames and passwords don't require a section.
    """
    field_type: ItemFieldType
    """
    The field's type
    """
    value: str
    """
    The string representation of the field's value
    """


ItemFieldType = Literal["Text", "Concealed", "Unsupported"]


class ItemSection(BaseModel):
    """
    A section groups together multiple fields in an item.
    """

    id: str
    """
    The section's unique ID
    """
    title: str
    """
    The section's title
    """
