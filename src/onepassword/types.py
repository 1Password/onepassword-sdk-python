"""
Generated by typeshare 1.11.0
"""

from __future__ import annotations

from pydantic import BaseModel, ConfigDict, Field
from typing import Annotated, List, Literal, Optional


ItemCategory = Literal[
    "Login",
    "SecureNote",
    "CreditCard",
    "CryptoWallet",
    "Identity",
    "Password",
    "Document",
    "ApiCredentials",
    "BankAccount",
    "Database",
    "DriverLicense",
    "Email",
    "MedicalRecord",
    "Membership",
    "OutdoorLicense",
    "Passport",
    "Rewards",
    "Router",
    "Server",
    "SshKey",
    "SocialSecurityNumber",
    "SoftwareLicense",
    "Person",
    "Unsupported",
]

ItemFieldType = Literal[
    "Text", "Concealed", "CreditCardType", "Phone", "Url", "Totp", "Unsupported"
]


class ItemFieldDetailsOtp(BaseModel):
    type: Literal["Otp"]
    content: OtpFieldDetails


ItemFieldDetails = ItemFieldDetailsOtp
"""
Field type-specific attributes.
"""


class ItemField(BaseModel):
    """
    Represents a field within an item.
    """

    model_config = ConfigDict(populate_by_name=True)

    id: str
    """
    The field's ID
    """
    title: str
    """
    The field's title
    """
    section_id: Annotated[Optional[str], Field(alias="sectionId")] = None
    """
    The ID of the section containing the field. Built-in fields such as usernames and passwords don't require a section.
    """
    field_type: Annotated[ItemFieldType, Field(alias="fieldType")]
    """
    The field's type
    """
    value: str
    """
    The string representation of the field's value
    """
    details: Optional[ItemFieldDetails] = None
    """
    Field type-specific attributes.
    """


class ItemSection(BaseModel):
    """
    A section groups together multiple fields in an item.
    """

    id: str
    """
    The section's unique ID
    """
    title: str
    """
    The section's title
    """


AutofillBehavior = Literal["AnywhereOnWebsite", "ExactDomain", "Never"]


class Website(BaseModel):
    model_config = ConfigDict(populate_by_name=True)

    url: str
    """
    The website URL
    """
    label: str
    """
    The label of the website, e.g. 'website', 'sign-in address'
    """
    autofill_behavior: Annotated[AutofillBehavior, Field(alias="autofillBehavior")]
    """
    The auto-fill behavior of the website
    
    For more information, visit https://support.1password.com/autofill-behavior/
    """


class Item(BaseModel):
    """
    Represents a 1Password item.
    """

    model_config = ConfigDict(populate_by_name=True)

    id: str
    """
    The item's ID
    """
    title: str
    """
    The item's title
    """
    category: ItemCategory
    """
    The item's category
    """
    vault_id: Annotated[str, Field(alias="vaultId")]
    """
    The ID of the vault where the item is saved
    """
    fields: List[ItemField]
    """
    The item's fields
    """
    sections: List[ItemSection]
    """
    The item's sections
    """
    tags: List[str]
    """
    The item's tags
    """
    websites: List[Website]
    """
    The websites used for autofilling for items of the Login and Password categories.
    """
    version: int
    """
    The item's version
    """


class ItemCreateParams(BaseModel):
    model_config = ConfigDict(populate_by_name=True)

    category: ItemCategory
    """
    The item's category
    """
    vault_id: Annotated[str, Field(alias="vaultId")]
    """
    The ID of the vault where the item is saved
    """
    title: str
    """
    The item's title
    """
    fields: Optional[List[ItemField]] = None
    """
    The item's fields
    """
    sections: Optional[List[ItemSection]] = None
    """
    The item's sections
    """
    tags: Optional[List[str]] = None
    """
    The item's tags
    """
    websites: Optional[List[Website]] = None
    """
    The websites used for autofilling for items of the Login and Password categories.
    """


class ItemOverview(BaseModel):
    """
    Represents a decrypted 1Password item.
    """

    model_config = ConfigDict(populate_by_name=True)

    id: str
    """
    The item's ID
    """
    title: str
    """
    The item's title
    """
    category: ItemCategory
    """
    The item's category
    """
    vault_id: Annotated[str, Field(alias="vaultId")]
    """
    The ID of the vault where the item is saved
    """
    websites: List[Website]
    """
    The websites used for autofilling for items of the Login and Password categories.
    """


class OtpFieldDetails(BaseModel):
    """
    Additional attributes for OTP fields.
    """

    model_config = ConfigDict(populate_by_name=True)

    code: Optional[str] = None
    """
    The OTP code, if successfully computed
    """
    error_message: Annotated[Optional[str], Field(alias="errorMessage")] = None
    """
    The error message, if the OTP code could not be computed
    """


class VaultOverview(BaseModel):
    """
    Represents a decrypted 1Password vault.
    """

    id: str
    """
    The vault's ID
    """
    title: str
    """
    The vault's title
    """
